{"version":3,"file":"bundle.min.js","sources":["../src/cuprum.ts"],"sourcesContent":["export { Cuprum, tap, fromEvent };\n\nclass Cuprum<T> {\n  private val: T;\n  private subscribers: Set<(value: T) => void> = new Set();\n  private subscribersHot: Set<(value: boolean) => void> = new Set();\n  private dispatched = false;\n  private hot = false;\n\n  dispatch(value: T) {\n    this.val = value;\n    this.dispatched = true;\n    this.subscribers.forEach((fn) =>\n      fn(value)\n    );\n  }\n\n  subscribeNext(fn: (value: T) => void): Subscription {\n    this.subscribers.add(fn);\n    this.notifyHotSubscribers();\n    return {\n      unsubscribe: () => {\n        this.subscribers.delete(fn)\n      }\n    }\n  }\n\n  subscribe(fn: (value: T) => void) {\n    if (this.dispatched) {\n      fn(this.val);\n    }\n    return this.subscribeNext(fn);\n  }\n\n  unsubscribe(fn: (value: T) => void) {\n    this.subscribers.delete(fn);\n    this.notifyHotSubscribers();\n  }\n\n  private notifyHotSubscribers() {\n    if (this.subscribers.size > 0 != this.hot) {\n      this.hot = this.subscribers.size > 0;\n      this.subscribersHot.forEach((fn) =>\n        fn(this.hot)\n      );\n    }\n  }\n\n  subscribeHot(fn: (value: boolean) => void) {\n    this.subscribersHot.add(fn);\n    return {\n      unsubscribe: () => {\n        this.subscribersHot.delete(fn)\n      }\n    }\n  }\n\n  clear() {\n    this.subscribers.clear();\n    this.subscribersHot.clear();\n  }\n\n  value() {\n    return this.val;\n  }\n\n  promise() {\n    return new Promise<T>((resolve) => {\n      const self = this;\n      this.subscribe(function fn(value) {\n        self.unsubscribe(fn);\n        resolve(value);\n      });\n    });\n  }\n\n  // TODO: async map\n\n  map<U>(fn: (val: T) => U) {\n    const event$ = new Cuprum<U>();\n    const dispatch = (value) => {\n      event$.dispatch(fn(value));\n    };\n    event$.subscribeHot((hot) => {\n      if (hot) {\n        this.subscribe(dispatch);\n      } else {\n        this.unsubscribe(dispatch);\n      }\n    });\n    return event$;\n  }\n\n  filter(fn: (val: T) => boolean) {\n    const event$ = new Cuprum<T>();\n    const dispatch = (value) => {\n      if (fn(value)) {\n        event$.dispatch(value);\n      }\n    };\n    event$.subscribeHot((hot) => {\n      if (hot) {\n        this.subscribe(dispatch);\n      } else {\n        this.unsubscribe(dispatch);\n      }\n    });\n    return event$;\n  }\n}\n\nclass Subscription {\n  unsubscribe: () => void;\n}\n\nfunction tap(fn: (val: any) => any) {\n  fn(this.val);\n  return this;\n}\n\nfunction fromEvent(element, eventType) {\n  const obs$ = new Cuprum<Event>();\n  const dispatch = (evt: Event) => {\n    obs$.dispatch(evt)\n  };\n  obs$.subscribeHot((hot) => {\n    if (hot) {\n      element.addEventListener(eventType, dispatch, false);\n    } else {\n      element.removeEventListener(eventType, dispatch, false);\n    }\n  });\n  return obs$;\n}\n\n// TODO: combine with more than two arguments\nfunction combine<T, U>(obs1$: Cuprum<T>, obs2$: Cuprum<U>) {\n  const obs$ = new Cuprum<[T, U]>();\n  let sub1: Subscription;\n  let sub2: Subscription;\n\n  obs$.subscribeHot((hot) => {\n    if (hot) {\n      sub1 = obs1$.subscribe((val1) => {\n        obs$.dispatch([val1, obs2$.value()]);\n      });\n\n      sub2 = obs2$.subscribe((val2) => {\n        obs$.dispatch([obs1$.value(), val2]);\n      });\n    } else {\n      sub1.unsubscribe();\n      sub2.unsubscribe();\n    }\n  });\n\n  return obs$;\n}\n"],"names":["Cuprum","[object Object]","this","Set","value","val","dispatched","subscribers","forEach","fn","add","notifyHotSubscribers","unsubscribe","delete","subscribeNext","size","hot","subscribersHot","clear","Promise","resolve","self","subscribe","event$","dispatch","subscribeHot","tap","fromEvent","element","eventType","obs$","evt","addEventListener","removeEventListener"],"mappings":"AAEA,MAAMA,EAANC,cAEUC,iBAAuC,IAAIC,IAC3CD,oBAAgD,IAAIC,IACpDD,iBAAa,EACbA,UAAM,EAEdD,SAASG,GACPF,KAAKG,IAAMD,EACXF,KAAKI,YAAa,EAClBJ,KAAKK,YAAYC,QAASC,GACxBA,EAAGL,IAIPH,cAAcQ,GAGZ,OAFAP,KAAKK,YAAYG,IAAID,GACrBP,KAAKS,uBACE,CACLC,YAAa,KACXV,KAAKK,YAAYM,OAAOJ,KAK9BR,UAAUQ,GAIR,OAHIP,KAAKI,YACPG,EAAGP,KAAKG,KAEHH,KAAKY,cAAcL,GAG5BR,YAAYQ,GACVP,KAAKK,YAAYM,OAAOJ,GACxBP,KAAKS,uBAGCV,uBACFC,KAAKK,YAAYQ,KAAO,GAAKb,KAAKc,MACpCd,KAAKc,IAAMd,KAAKK,YAAYQ,KAAO,EACnCb,KAAKe,eAAeT,QAASC,GAC3BA,EAAGP,KAAKc,OAKdf,aAAaQ,GAEX,OADAP,KAAKe,eAAeP,IAAID,GACjB,CACLG,YAAa,KACXV,KAAKe,eAAeJ,OAAOJ,KAKjCR,QACEC,KAAKK,YAAYW,QACjBhB,KAAKe,eAAeC,QAGtBjB,QACE,OAAOC,KAAKG,IAGdJ,UACE,OAAO,IAAIkB,QAAYC,IACrB,MAAMC,EAAOnB,KACbA,KAAKoB,WAAU,SAASb,EAAGL,GACzBiB,EAAKT,YAAYH,GACjBW,EAAQhB,QAOdH,IAAOQ,GACL,MAAMc,EAAS,IAAIvB,EACbwB,EAAYpB,IAChBmB,EAAOC,SAASf,EAAGL,KASrB,OAPAmB,EAAOE,aAAcT,IACfA,EACFd,KAAKoB,UAAUE,GAEftB,KAAKU,YAAYY,KAGdD,EAGTtB,OAAOQ,GACL,MAAMc,EAAS,IAAIvB,EACbwB,EAAYpB,IACZK,EAAGL,IACLmB,EAAOC,SAASpB,IAUpB,OAPAmB,EAAOE,aAAcT,IACfA,EACFd,KAAKoB,UAAUE,GAEftB,KAAKU,YAAYY,KAGdD,GAQX,SAASG,EAAIjB,GAEX,OADAA,EAAGP,KAAKG,KACDH,KAGT,SAASyB,EAAUC,EAASC,GAC1B,MAAMC,EAAO,IAAI9B,EACXwB,EAAYO,IAChBD,EAAKN,SAASO,IAShB,OAPAD,EAAKL,aAAcT,IACbA,EACFY,EAAQI,iBAAiBH,EAAWL,GAAU,GAE9CI,EAAQK,oBAAoBJ,EAAWL,GAAU,KAG9CM"}